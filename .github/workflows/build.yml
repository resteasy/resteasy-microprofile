# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: RESTEasy MicroProfile Build and Test

on:
  push:
    branches-ignore:
      - 'dependabot/**'
    paths:
      - '.github/workflows/build.yml'
      - '**/pom.xml'
      - 'config/**'
      - 'context-propagation/**'
      - 'rest-client/**'
      - 'rest-client-base/**'
      - 'resteasy-microprofile-bom/**'
      - 'resteasy-microprofile-test-bom/**'
      - 'testsuite/**'
      - 'wildfly/**'
  pull_request:
    branches:
      - '**'
    paths:
      - '.github/workflows/build.yml'
      - '**/pom.xml'
      - 'config/**'
      - 'context-propagation/**'
      - 'rest-client/**'
      - 'rest-client-base/**'
      - 'resteasy-microprofile-bom/**'
      - 'resteasy-microprofile-test-bom/**'
      - 'testsuite/**'
      - 'wildfly/**'

# Only run the latest job
concurrency:
  group: '${{ github.workflow }} @ ${{ github.event.pull_request.head.label || github.head_ref || github.ref }}'
  cancel-in-progress: true

jobs:
  build:
    name: Build and Test
    runs-on: ${{ matrix.os }}
    timeout-minutes: 30
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-latest, windows-latest ]
        java: [ '11', '17' ]

    steps:
      - uses: actions/checkout@v5
      - name: Set up JDK ${{ matrix.java }}
        uses: actions/setup-java@v5
        with:
          java-version: ${{ matrix.java }}
          distribution: 'temurin'
          cache: 'maven'
      - name: Build with Maven Java ${{ matrix.java }}  - ${{ matrix.os }}
        run: |
          mvn clean install -U -B -fae
      - uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: surefire-reports-${{ matrix.os }}-${{ matrix.java }}
          path: |
            '**/surefire-reports/'

  additional-profiles:
    name: Test with ${{ matrix.profile }} - JDK ${{ matrix.java }}
    runs-on: ubuntu-latest
    timeout-minutes: 30
    strategy:
      fail-fast: false
      matrix:
        java: [ '11', '17', '21' ]
        profile:
          - "'-Dsecurity.manager'"

    steps:
      - uses: actions/checkout@v5
      - name: Set up JDK ${{ matrix.java }}
        uses: actions/setup-java@v5
        with:
          java-version: ${{ matrix.java }}
          distribution: 'temurin'
          cache: 'maven'
      - name: Test with Java ${{ matrix.java }} - ${{ matrix.profile }}
        run: |
          mvn clean install -U -B -fae ${{ matrix.profile }}
      - uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: surefire-reports-${{ matrix.profile }}-${{ matrix.java }}
          path: |
            '**/surefire-reports/'

  provision-preview:
    name: Test Provisioning with Preview - JDK ${{ matrix.java }}
    runs-on: ubuntu-latest
    timeout-minutes: 30
    strategy:
      fail-fast: false
      matrix:
        java: [ '17', '21' ]

    steps:
      - uses: actions/checkout@v5
      - name: Set up JDK ${{ matrix.java }}
        uses: actions/setup-java@v5
        with:
          java-version: ${{ matrix.java }}
          distribution: 'temurin'
          cache: 'maven'
      - name: Test with Java ${{ matrix.java }} - Provision Preview
        run: |
          mvn clean install -U -B -fae '-Dprovision.preview'
      - uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: surefire-reports-preview-${{ matrix.java }}
          path: |
            '**/surefire-reports/'

  format-check:
    name: Check Code Formatting
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
      - uses: actions/checkout@v5
      - name: Set up JDK 11
        uses: actions/setup-java@v5
        with:
          java-version: 11
          distribution: 'temurin'
          cache: 'maven'
      - name: Validate Formatting
        run: |
          mvn -B validate -Pformat-check -Denforcer.skip=true

