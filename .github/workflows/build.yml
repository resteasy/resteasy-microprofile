# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: RESTEasy MicroProfile Build and Test

on:
  push:
    branches:
      - 'main'
  pull_request:
    types: [ opened, synchronize, reopened, ready_for_review ]

jobs:
  build:
    name: Build and Test
    runs-on: ${{ matrix.os }}
    timeout-minutes: 30
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-latest, windows-latest ]

    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: 11
          distribution: 'temurin'
          cache: 'maven'
      - name: Build with Maven Java 11  - ${{ matrix.os }}
        run: |
          echo "::group::Build Logs"
          mvn clean install -U -B -fae '-Ddev.resteasy.timeout.test.factor=2'
          echo "::endgroup::"
      - uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: surefire-reports-${{ matrix.os }}-${{ matrix.java }}
          path: '**/surefire-reports/*.txt'

  jvm-tests:
    name: Test with Java ${{ matrix.java }} (${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    timeout-minutes: 30
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-latest, windows-latest ]
        java: [ '17' ]

    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK ${{ matrix.java }}
        uses: actions/setup-java@v3
        with:
          java-version: ${{ matrix.java }}
          distribution: 'temurin'
          cache: 'maven'
      - run: echo "JDK_${{ matrix.java }}=$JAVA_HOME" >> $GITHUB_ENV
      # This must be run after the previous setup to ensure the JAVA_HOME is always Java 11.
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: 11
          distribution: 'temurin'
          cache: 'maven'
      # Since we need to pass the test.java.home we need different runs for Linux and Windows
      - name: Test with Java ${{ matrix.java }}  - Linux
        if: runner.os == 'Linux'
        run: mvn clean install -U -B -fae -Dtest.java.home="$JDK_${{ matrix.java }}"  -Ddev.resteasy.timeout.test.factor=2
      - name: Test with Java ${{ matrix.java }} - Windows
        if: runner.os == 'Windows'
        run: mvn clean install -U -B -fae '"-Dtest.java.home=%JDK_${{ matrix.java }}%"' '-Ddev.resteasy.timeout.test.factor=2'
      - uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: surefire-reports-${{ matrix.os }}-${{ matrix.java }}
          path: '**/surefire-reports/*.txt'

  format-check:
    name: Check Code Formatting
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: 11
          distribution: 'temurin'
          cache: 'maven'
      - name: Format Source
        run: "mvn -B formatter:format"
      - name: Check for changes
        run:  |
          [ -z "$(git status --porcelain=v1 2>/dev/null)" ] || (echo -e "::error ::Changes have been found\n$(git status --porcelain)" && exit 1)

